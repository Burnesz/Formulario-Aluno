/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import PacoteAluno.Aluno;
import PacoteAluno.AlunoBD;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.ArrayList;
import javax.swing.*;
import java.util.logging.Level;
import java.util.logging.Logger;
//import javax.persistence.*;

/**
 *
 * @author mathe
 */
public class TelaCadastro extends javax.swing.JFrame {
    private List<Aluno> listaDeAlunos = new ArrayList<>();
    //private EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory("com.mycompany_Alunos_jar_1.0-SNAPSHOTPU");
    //private EntityManager entityManager = entityManagerFactory.createEntityManager();

    public TelaCadastro() {
        initComponents();
        setTitle("Tela de Cadastro");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        //carregaBD();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtmatricula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtnome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtcpf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtphone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtdata_nasc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtidade = new javax.swing.JTextField();
        BtnSalvar = new javax.swing.JButton();
        BtnPesquisar = new javax.swing.JButton();
        BtnExcluir = new javax.swing.JButton();
        BtnAlunoNovoVelho = new javax.swing.JButton();
        BtnInserirNaPosicao = new javax.swing.JButton();
        BtnLista = new javax.swing.JButton();
        BtnLimpaTela = new javax.swing.JButton();
        bntCsv = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setToolTipText("");
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 500));

        jLabel1.setText("Matrícula");

        txtmatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmatriculaActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome");

        txtnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnomeActionPerformed(evt);
            }
        });

        jLabel3.setText("CPF");

        txtcpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcpfActionPerformed(evt);
            }
        });

        jLabel4.setText("Telefone");

        txtphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtphoneActionPerformed(evt);
            }
        });

        jLabel5.setText("Data Nasc.");

        txtdata_nasc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdata_nascActionPerformed(evt);
            }
        });

        jLabel6.setText("Idade");

        txtidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidadeActionPerformed(evt);
            }
        });

        BtnSalvar.setText("Salvar");
        BtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalvarActionPerformed(evt);
            }
        });

        BtnPesquisar.setText("Pesquisar");
        BtnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPesquisarActionPerformed(evt);
            }
        });

        BtnExcluir.setText("Excluir");
        BtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExcluirActionPerformed(evt);
            }
        });

        BtnAlunoNovoVelho.setText("Novo/Velho");
        BtnAlunoNovoVelho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAlunoNovoVelhoActionPerformed(evt);
            }
        });

        BtnInserirNaPosicao.setText("Inserir na Posição");
        BtnInserirNaPosicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnInserirNaPosicaoActionPerformed(evt);
            }
        });

        BtnLista.setText("Listagem");
        BtnLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnListaActionPerformed(evt);
            }
        });

        BtnLimpaTela.setText("Limpar Tela");
        BtnLimpaTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpaTelaActionPerformed(evt);
            }
        });

        bntCsv.setText("CSV");
        bntCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntCsvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtmatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtcpf, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtdata_nasc, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(txtidade, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntCsv, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnLimpaTela, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnAlunoNovoVelho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BtnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BtnInserirNaPosicao))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(345, 345, 345))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtmatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bntCsv, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BtnInserirNaPosicao, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BtnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnAlunoNovoVelho, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtdata_nasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnLista, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnLimpaTela, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExcluirActionPerformed
        if(listaDeAlunos.isEmpty()){
            JOptionPane.showMessageDialog(this, "Ainda não foi inserido nenhum aluno na lista!");
        }else{
            TelaPesquisa telapesquisa = new TelaPesquisa(listaDeAlunos, "Excluir");
            telapesquisa.setVisible(true);
            listaDeAlunos = telapesquisa.getListaDeAlunos();
        }
    }//GEN-LAST:event_BtnExcluirActionPerformed

    private void BtnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPesquisarActionPerformed
        if(listaDeAlunos.isEmpty()){
            JOptionPane.showMessageDialog(this, "Ainda não foi inserido nenhum aluno na lista!");
        }else{
            TelaPesquisa telapesquisa = new TelaPesquisa(listaDeAlunos);
            telapesquisa.setVisible(true);
            listaDeAlunos = telapesquisa.getListaDeAlunos();
        }
    }//GEN-LAST:event_BtnPesquisarActionPerformed

    private void BtnAlunoNovoVelhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAlunoNovoVelhoActionPerformed
        if (listaDeAlunos.size() < 2) {
                JOptionPane.showMessageDialog(this, "Não há alunos suficientes para distinguir o mais novo e o mais velho.");
                return;
          }

        Aluno alunoMaisNovo = listaDeAlunos.get(0);
        Aluno alunoMaisVelho = listaDeAlunos.get(0);

        for (Aluno aluno : listaDeAlunos) {
            if (aluno.getDataNasc().before(alunoMaisVelho.getDataNasc())) {
                alunoMaisVelho = aluno;
            }
            if (aluno.getDataNasc().after(alunoMaisNovo.getDataNasc())) {
                alunoMaisNovo = aluno;
            }
        }

        JOptionPane.showMessageDialog(this, "Aluno mais novo: " + alunoMaisNovo.getNome() +
                " (" + alunoMaisNovo.getDataNasc() + ")\n" +
                "Aluno mais velho: " + alunoMaisVelho.getNome() +
                " (" + alunoMaisVelho.getDataNasc() + ")");
    }//GEN-LAST:event_BtnAlunoNovoVelhoActionPerformed

    private void BtnInserirNaPosicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnInserirNaPosicaoActionPerformed
        String matricula = txtmatricula.getText();
        String nome = txtnome.getText();
        String cpf = txtcpf.getText();
        String telefone = txtphone.getText();
        String dataNasc = txtdata_nasc.getText();
        String idade = txtidade.getText();
        
        if(erroCadastro(matricula, nome, cpf, telefone, dataNasc, idade)){
            return;
        }
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdf.setLenient(false);
        try {
            sdf.parse(dataNasc);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Data de nascimento inválida! Use o formato dd/MM/yyyy.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int idadeInt = Integer.parseInt(idade);
            if (!listaDeAlunos.isEmpty() && verificaAlunoRepetido(listaDeAlunos, matricula, cpf)){
                throw new Exception("Esse aluno já está inserido em nosso banco de dados!");
            }else{
                Aluno aluno = new Aluno(matricula, nome, cpf, telefone, dataNasc, idadeInt);
                TelaPesquisa telaPesquisa = new TelaPesquisa(listaDeAlunos, aluno);
                telaPesquisa.setVisible(true);
                listaDeAlunos = telaPesquisa.getListaDeAlunos();
                //salvarAlunoBD(aluno);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Idade inválida!", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception exc){
            JOptionPane.showMessageDialog(this, exc.getMessage());
        }
    }//GEN-LAST:event_BtnInserirNaPosicaoActionPerformed

    private void BtnListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnListaActionPerformed

        TelaListagem telalistagem = new TelaListagem(listaDeAlunos);
        telalistagem.tabela();
        telalistagem.setVisible(true);
    }//GEN-LAST:event_BtnListaActionPerformed

    private void txtidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidadeActionPerformed

    private void txtcpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcpfActionPerformed

    private void txtphoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtphoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtphoneActionPerformed

    private void txtmatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmatriculaActionPerformed
                    // TODO add your handling code here:
    }//GEN-LAST:event_txtmatriculaActionPerformed

    private void BtnLimpaTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpaTelaActionPerformed
            txtmatricula.setText("");
            txtnome.setText("");
            txtcpf.setText("");
            txtphone.setText("");
            txtdata_nasc.setText("");
            txtidade.setText("");
    }//GEN-LAST:event_BtnLimpaTelaActionPerformed

    private void txtdata_nascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdata_nascActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdata_nascActionPerformed

    private void txtnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnomeActionPerformed

    private void BtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalvarActionPerformed
        String matricula = txtmatricula.getText();
        String nome = txtnome.getText();
        String cpf = txtcpf.getText();
        String telefone = txtphone.getText();
        String dataNasc = txtdata_nasc.getText();
        String idade = txtidade.getText();
        
        if(erroCadastro(matricula, nome, cpf, telefone, dataNasc, idade)){
            return;
        }
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdf.setLenient(false);
        try {
            sdf.parse(dataNasc);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Data de nascimento inválida! Use o formato dd/MM/yyyy.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int idadeInt = Integer.parseInt(idade);
            if (!listaDeAlunos.isEmpty() && verificaAlunoRepetido(listaDeAlunos, matricula, cpf)){
                throw new Exception("Esse aluno já está inserido em nosso banco de dados!");
            }else{
                Aluno aluno = new Aluno(matricula, nome, cpf, telefone, dataNasc, idadeInt);
                //salvarAlunoBD(aluno);
                listaDeAlunos.add(aluno);
                JOptionPane.showMessageDialog(this, "Dados salvos com sucesso!");  
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Idade inválida!", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception exc){
            JOptionPane.showMessageDialog(this, exc.getMessage());
        }

    }//GEN-LAST:event_BtnSalvarActionPerformed

    private void bntCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntCsvActionPerformed
        try {
            try (FileWriter writer = new FileWriter("alunos.csv")) {
                writer.append("Matricula;Nome;CPF;Telefone;Data de Nascimento;Idade\n");

                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

                for (Aluno aluno : listaDeAlunos) {
                    writer.append(aluno.getMat()).append(";");
                    writer.append(aluno.getNome()).append(";");
                    writer.append(aluno.getCpf()).append(";");
                    writer.append(aluno.getTel()).append(";");
                    writer.append(sdf.format(aluno.getDataNasc())).append(";");
                    writer.append(String.valueOf(aluno.getIdade())).append("\n");
                }

                writer.flush();
            }

            JOptionPane.showMessageDialog(this, "Dados salvos em CSV com sucesso!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar os dados em CSV: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bntCsvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastro().setVisible(true);
            }
        });
    }
    
    public boolean erroCadastro(String matricula, String nome, String cpf, String telefone, String dataNasc, String idade){
        boolean a = false;
        boolean b = false;
        boolean c = false;
        boolean d = false;
        boolean e = false;
        boolean f = false;
        boolean g = false;
        boolean h;
        
        if (matricula.isEmpty() || nome.isEmpty() || cpf.isEmpty() || telefone.isEmpty() || dataNasc.isEmpty() || idade.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos os campos devem ser preenchidos!", "Erro", JOptionPane.ERROR_MESSAGE);
            a = true;
            }

        if (!cpf.matches("\\d{11}")) {
            JOptionPane.showMessageDialog(this, "CPF inválido! Deve conter 11 dígitos.", "Erro", JOptionPane.ERROR_MESSAGE);
            b = true;
        }


        if (!matricula.matches("\\d{7}")) {
            JOptionPane.showMessageDialog(this, "Matrícula deve conter 7 dígitos.", "Erro", JOptionPane.ERROR_MESSAGE);
            c = true;
        }

        if (!telefone.matches("\\d{11}")) {
            JOptionPane.showMessageDialog(this, "Telefone inválido! Deve conter 11 dígitos.", "Erro", JOptionPane.ERROR_MESSAGE);
            d = true;
        }

        if (!idade.matches("\\d{1,2}")) {
            JOptionPane.showMessageDialog(this, "Idade inválida! Deve conter até 2 dígitos.", "Erro", JOptionPane.ERROR_MESSAGE);
            e = true;
        }

        if (nome.length() > 50) {
            JOptionPane.showMessageDialog(this, "O nome deve ter no máximo 50 caracteres.", "Erro", JOptionPane.ERROR_MESSAGE);
            f = true;
        }

        if (!nome.matches("[a-zA-Z\\s]+")) {
            JOptionPane.showMessageDialog(this, "O nome não pode conter números ou caracteres.", "Erro", JOptionPane.ERROR_MESSAGE);
            g = true;
        }
    h = a || b || c || d || e || f || g;
    return h; 
    }
    
    public boolean verificaAlunoRepetido(List<Aluno> aluno, String matricula, String cpf){
        boolean x = false;
        boolean y = false;
        boolean z = false;
        for(Aluno i : aluno){
            if(i.getMat().equals(matricula)){
                x = true;
            }
        }    
        for(Aluno j : aluno){
            if(j.getCpf().equals(cpf)){
                y = true;
            }
        z = x || y;
        }    
        return z;
    }
    public AlunoBD alunoObj(Aluno aluno){
        AlunoBD a= new AlunoBD();
        a.setMat(aluno.getMat());
        a.setNome(aluno.getNome());
        a.setCpf(aluno.getCpf());
        a.setDataNasc(aluno.getDataNasc());
        a.setIdade(aluno.getIdade());
        a.setTel(aluno.getTel());
        return a;
    }
    
    public Aluno alunoObj(AlunoBD aluno){
        Aluno a = new Aluno();
        a.setMat(aluno.getMat());
        a.setNome(aluno.getNome());
        a.setCpf(aluno.getCpf());
        a.setDataNasc(aluno.getDataNasc());
        a.setIdade(aluno.getIdade());
        a.setTel(aluno.getTel());
        return a;
    }
    
    /*private void carregaBD(){
        entityManager.getTransaction().begin();
        Query query = entityManager.createQuery("SELECT a FROM AlunoBD a");
        List<AlunoBD> alunos = query.getResultList();
        for (AlunoBD aluno : alunos) {
            listaDeAlunos.add(alunoObj(aluno));
        }
        entityManager.getTransaction().commit();
    }
    private void salvarAlunoBD(Aluno aluno){
        entityManager.getTransaction().begin();
        entityManager.persist(alunoObj(aluno));
        entityManager.getTransaction().commit();
    }
    */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAlunoNovoVelho;
    private javax.swing.JButton BtnExcluir;
    private javax.swing.JButton BtnInserirNaPosicao;
    private javax.swing.JButton BtnLimpaTela;
    private javax.swing.JButton BtnLista;
    private javax.swing.JButton BtnPesquisar;
    private javax.swing.JButton BtnSalvar;
    private javax.swing.JButton bntCsv;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtcpf;
    private javax.swing.JTextField txtdata_nasc;
    private javax.swing.JTextField txtidade;
    private javax.swing.JTextField txtmatricula;
    private javax.swing.JTextField txtnome;
    private javax.swing.JTextField txtphone;
    // End of variables declaration//GEN-END:variables

}
